import cv2
import numpy

# image = cv2.imread("TestImages/SnowLeo4.jpg")
# gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
# cv2.imshow("Gray image", gray)
# blankImg = numpy.zeros((150, 250), numpy.uint8)
# cv2.imshow("Blank image", blankImg)
# height, width, depth = image.shape
# print height, width, depth
# cv2.waitKey(0)

import cv2
import numpy
image = cv2.imread("TestImages/shops.jpg")
(bc, gc, rc) = cv2.split(image)
# each channel is shown as grayscale, because it only has value per pixel
cv2.imshow("Blue channel", bc)
cv2.imshow("Green channel", gc)
cv2.imshow("Red channel", rc)
cv2.waitKey(0)
# Creates a one-channel black image the same size as the original
zc = numpy.zeros( bc.shape, numpy.uint8 )
# Creates a color image where only shades of blue are shown
blueImg = cv2.merge((bc, zc, zc))   #zeros for green and red channels
cv2.imshow("Blue channel", blueImg)
# Creates a color image where only shades of green are shown
greenImg = cv2.merge((zc, gc, zc))    #zeros for blue and red channels
cv2.imshow("Green channel", greenImg)
# Creates a color image where only shades of red are shown
redImg = cv2.merge((zc, zc, rc))    #zeros for blue and green channels
cv2.imshow("Red channel", redImg)
cv2.waitKey(0)